# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    #- uses: actions/checkout@v3
    #- name: Set up Python 3.10
    #  uses: actions/setup-python@v3
    #  with:
    #    python-version: "3.10"
    - name: Set up miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: false
        python-version: ${{ matrix.python-version }}
        use-only-tar-bz2: true
        miniforge-version: latest
    - name: Install things with mamba
      run: |
        mamba install python
        mamba install numpy
        mamba install xtb
    - name: Test mamba installed things work
      run: |
        mamba list
        #which xtb
        #which python
        #echo "PATH: $PATH"
        #echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        #TODO: make xtb requirement?
        mamba install xtb
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
